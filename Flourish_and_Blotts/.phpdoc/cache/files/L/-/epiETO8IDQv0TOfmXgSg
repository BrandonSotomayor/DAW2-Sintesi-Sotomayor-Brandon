1686722984
waR3U4bTeM%3Aeef66269174949294bd7f405fd4180aa-8747d61b0d807b638075e3e9d6624648
s:28932:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"8747d61b0d807b638075e3e9d6624648";s:39:" phpDocumentor\Reflection\Php\File name";s:25:"UploadFilesController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:41:"app/Controllers/UploadFilesController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:11482:"<?php

namespace App\Controllers;

use App\Controllers\BaseController;
use App\Models\AutoresModel;
use App\Models\CategoriasModel;
use App\Models\EjemplaresModel;
use App\Models\EstudiantesModel;
use App\Models\LibroAutorModel;
use App\Models\LibroCategoriaModel;
use App\Models\LibrosModel;
use App\Models\ProfesoresModel;
use App\Models\UsuariosModel;
use CodeIgniter\Files\File;

class UploadFilesController extends BaseController
{
    public function __construct()
    {
        helper('form');
    }

    public function usuario_masivo()
    {
        $data['title'] = "CSV de usuarios";
        $data['errors'] = [];

        return view('privada_responsable/agregar_usuario_masivo', $data);
    }

    public function usuario_masivo_post() {
        $data['title'] = "CSV de usuarios";
        $model = new UsuariosModel();
        $model_estudiantes = new EstudiantesModel();
        $model_profesores = new ProfesoresModel();

        $img = $this->request->getFile('userfile');
        if (!$img->hasMoved()) {

            $newName = $img->getClientName();
            $filepath = WRITEPATH . 'uploads/' . $newName;
            $img->move(WRITEPATH . 'uploads', $newName);

            $data['uploaded_flleinfo'] = new File($filepath);
            $csvFile = fopen($filepath, "r"); // read file from /writable/uploads folder.

            $nombre = explode('.',$newName);
            if ( $nombre[0] == 'profesores' ){

                while (($data = fgetcsv($csvFile, 9000, ",")) !== FALSE) {
                    
                    $dni_nie = $data[0];
                    
                    $datos = [
                        'dni_nie' => $dni_nie,
                        'nombre' => $data[1],
                        'apellido1' => $data[2],
                        'apellido2' => $data[3],
                        'correo_electronico' => $data[4],
                        'contrasena' => password_hash($data[5],PASSWORD_DEFAULT),
                        'estado' => $data[6],
                        'id_rol' => $data[7],
                        'fec_ultima_modificacion' => $data[9]
                    ];
                    $model->insert($datos);
                    
                    $model->insertarProfesor($dni_nie,$data[10],$data[11]);
                }

            }
            else if ( $nombre[0] == 'estudiantes' ){
                while (($data = fgetcsv($csvFile, 9000, ",")) !== FALSE) {
                    
                    $dni_nie = $data[0];
                    
                    $datos = [
                        'dni_nie' => $dni_nie,
                        'nombre' => $data[1],
                        'apellido1' => $data[2],
                        'apellido2' => $data[3],
                        'correo_electronico' => $data[4],
                        'contrasena' => password_hash($data[5],PASSWORD_DEFAULT),
                        'estado' => $data[6],
                        'id_rol' => $data[7],
                        'fec_ultima_modificacion' => $data[9]
                    ];
                    $model->insert($datos);
                    
                    $model->insertarEstudiante($dni_nie,$data[10],$data[11],$data[12]);
                }
            }
            else if ( $nombre[0] == 'pas' ){

                while (($data = fgetcsv($csvFile, 9000, ",")) !== FALSE) {
                    
                    $dni_nie = $data[0];
                    
                    $datos = [
                        'dni_nie' => $dni_nie,
                        'nombre' => $data[1],
                        'apellido1' => $data[2],
                        'apellido2' => $data[3],
                        'correo_electronico' => $data[4],
                        'contrasena' => password_hash($data[5],PASSWORD_DEFAULT),
                        'estado' => $data[6],
                        'id_rol' => $data[7],
                        'fec_ultima_modificacion' => $data[9]
                    ];
                    $model->insert($datos);
                }
            }

            fclose($csvFile);

            $data['title'] = "Single file uploader";
            $data['uploaded_flleinfo'] = new File($filepath);

            session()->setFlashdata('message','Usuarios agregados masivamente');
            return redirect()->to(base_url('usuarios/privado/'.session()->get('rol').'/gestion_libros'));
        } else {
            $data['errors'] = 'The file has already been moved.';

            return view('privada_responsable/agregar_libro_masivo', $data);
        }
    }

    public function libro_masivo()
    {
        $data['title'] = "CSV de libros";
        $data['errors'] = [];

        return view('privada_responsable/agregar_libro_masivo', $data);
    }

    public function libro_masivo_post() {
        $data['title'] = "CSV de libros";
        $model_libro = new LibrosModel();
        $model_ejemplar = new EjemplaresModel();
        $model_autor = new AutoresModel();
        $model_libro_autor = new LibroAutorModel();
        $model_categoria = new CategoriasModel();
        $model_libro_categoria = new LibroCategoriaModel();

        $img = $this->request->getFile('userfile');
        if (!$img->hasMoved()) {

            $newName = $img->getClientName();
            $filepath = WRITEPATH . 'uploads/' . $newName;
            $img->move(WRITEPATH . 'uploads', $newName);

            $data['uploaded_flleinfo'] = new File($filepath);
            $csvFile = fopen($filepath, "r"); // read file from /writable/uploads folder.

            $nombre = explode('.',$newName);
            if ( $nombre[0] == 'libros' ){

                while (($data = fgetcsv($csvFile, 9000, ",")) !== FALSE) {
                    
                    $datos = [
                        'isbn_13' => $data[0],
                        'titulo' => $data[1],
                        'subtitulo' => $data[2],
                        'idioma' => $data[3],
                        'editorial' => $data[4],
                        'fecha_publicacion' => $data[5],
                        'numero_paginas' => $data[6],
                        'descripcion' => $data[7],
                        'imagen' => $data[8]
                    ];
                    $model_libro->insert($datos);      //INSERTAR A LIBROS
                    
                    if ( str_contains(',', $data[9]) ){
                        $autores = explode(',',$data[9]);
                        for ($i=0; $i<sizeof($autores); $i++  ){

                            $autor = $model_autor->where('nombre_autor',$autores[$i])->findAll();
                            if ( sizeof($autor) == 0 ){
                                $datos = [
                                    'nombre_autor' => $autores[$i],
                                ];
                                $model_autor->insert($datos);      //INSERTAR AUTOR
                            }
                            
                            $autor = $model_autor->where('nombre_autor',$autores[$i])->first();
                            $isbn_13 = $model_libro->where('isbn_13',$data[0])->first();
                            $datos = [
                                'isbn_13' => $isbn_13['isbn_13'],
                                'id_autor' => $autor['id_autor']
                            ];
                            $model_libro_autor->save($datos);       //INSERTAR LIBRO_CATEGORIA
                        }
                    }
                    else{

                        $nombre_autor = $model_autor->where('nombre_autor',$data[9])->first();
                        if ( $nombre_autor == null ){
                            $datos = [
                                'nombre_autor'=> $data[9]
                            ];
                            $model_autor->insert($datos);      //INSERTAR A AUTORES
                        }

                        $autor = $model_autor->where('nombre_autor',$data[9])->first();
                        $libro = $model_libro->obtener_libro($data[0]); //where('isbn_13',$datos['isbn_13'])->first();
                        $datos = [
                            'isbn_13' =>$libro['isbn_13'],
                            'id_autor' => $autor['id_autor']
                        ];
                        $model_libro_autor->insert($datos);        //INSERTAR A LIBRO_AUTOR
                    }

                    if ( str_contains(',', $data[10]) ){
                        //SEPARAR TODAS LAS CATEGORIAS QUE VINIERON DEL FORMULARIO Y HACER EL INSERT 1x1, AL MISMO TIEMPO LA TABLA RELACIONAL
                        $categorias = explode(';',$data[10]);
                        for ($i=0; $i<sizeof($categorias); $i++  ){
                            $categoria = $model_categoria->where('nombre_categoria',$categorias[$i])->findAll();
                            if ( sizeof($categoria) == 0 ){
                                $datos = [
                                    'nombre_categoria' => $categorias[$i],
                                ];
                                $model_categoria->insert($datos);      //INSERTAR CATEGORIA
                            }
                            
                            $categoria = $model_categoria->where('nombre_categoria',$categorias[$i])->first();
                            $id_libro = $model_libro->where('isbn_13',$data[0])->first();
                            $datos = [
                                'isbn_13' => $id_libro['isbn_13'],
                                'id_categoria' => $categoria['id_categoria']
                            ];
                            $model_libro_categoria->insert($datos);       //INSERTAR LIBRO_CATEGORIA
                        }
                    }
                    else{
                        $categoria = $model_categoria->where('nombre_categoria',$data[10])->first();
                        if ( $categoria == null ){
                            $datos = [
                                'nombre_categoria'=> $data[10]
                            ];
                            $model_categoria->insert($datos);      //INSERTAR A CATEGORIAS
                        }

                        $categoria = $model_categoria->where('nombre_categoria',$data[10])->first();
                        $libro = $model_libro->where('isbn_13',$data[0])->first();
                        $datos = [
                            'isbn_13' =>$libro['isbn_13'],
                            'id_categoria' => $categoria['id_categoria']
                        ];
                        $model_libro_categoria->insert($datos);        //INSERTAR A LIBRO_CATEGORIA
                    }

                    $libro = $model_libro->where('isbn_13',$data[0])->first();
                    $datos = [
                        'isbn_13'=>$libro['isbn_13']
                    ];
                    $model_ejemplar->insert($datos);
                }
            }

            fclose($csvFile);

            $data['title'] = "Single file uploader";
            $data['uploaded_flleinfo'] = new File($filepath);

            session()->setFlashdata('message','Usuarios agregados masivamente');
            return redirect()->to(base_url('usuarios/privado/'.session()->get('rol').'/gestion_libros'));
        } else {
            $data['errors'] = 'The file has already been moved.';

            return view('privada_responsable/agregar_usuario_masivo', $data);
        }
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:16:"\App\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\App\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:38:"\App\Controllers\UploadFilesController";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\App\Controllers\UploadFilesController";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"UploadFilesController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\App\Controllers\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:5:{s:53:"\App\Controllers\UploadFilesController::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\App\Controllers\UploadFilesController::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:22;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:56:"\App\Controllers\UploadFilesController::usuario_masivo()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\App\Controllers\UploadFilesController::usuario_masivo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"usuario_masivo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:61:"\App\Controllers\UploadFilesController::usuario_masivo_post()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:61:"\App\Controllers\UploadFilesController::usuario_masivo_post()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"usuario_masivo_post";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:32;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:126;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:54:"\App\Controllers\UploadFilesController::libro_masivo()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:54:"\App\Controllers\UploadFilesController::libro_masivo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"libro_masivo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:128;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:134;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:59:"\App\Controllers\UploadFilesController::libro_masivo_post()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\App\Controllers\UploadFilesController::libro_masivo_post()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"libro_masivo_post";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:136;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:272;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:17;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:273;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";