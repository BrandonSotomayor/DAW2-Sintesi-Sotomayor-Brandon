{"version":3,"file":"src_app_paginas_privada_usuarios_micuenta_micuenta_module_ts-src_app_servicios_auth_service_ts.js","mappings":"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","sources":["./src/app/paginas/privada_usuarios/micuenta/micuenta-routing.module.ts","./src/app/paginas/privada_usuarios/micuenta/micuenta.module.ts","./src/app/paginas/privada_usuarios/micuenta/micuenta.page.ts","./src/app/servicios/auth.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MicuentaPage } from './micuenta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MicuentaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MicuentaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MicuentaPageRoutingModule } from './micuenta-routing.module';\n\nimport { MicuentaPage } from './micuenta.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MicuentaPageRoutingModule\n  ],\n  declarations: [MicuentaPage]\n})\nexport class MicuentaPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PrivadaService } from 'src/app/servicios/privada.service';\n\n@Component({\n  selector: 'app-micuenta',\n  templateUrl: './micuenta.page.html',\n  styleUrls: ['./micuenta.page.scss'],\n})\nexport class MicuentaPage implements OnInit {\n\n  dni_nie = '';\n  nombre = '';\n  apellido1 = '';\n  apellido2 = '';\n  correo_electronico = '';\n  contrasena = '';\n  nueva_contrasena = '';\n  public datos_usuario;\n\n  constructor(private router: Router, private _privadaService: PrivadaService) { \n    this.datos_usuario = this._privadaService.mi_cuenta;\n  }\n\n  actualizar(){\n    this._privadaService.mi_cuenta_datos_post(this.dni_nie,this.nombre,this.apellido1,this.apellido2,this.correo_electronico,this.contrasena,this.nueva_contrasena);\n  }\n\n  cancelar(){\n    this.router.navigate(['paginas','administrador']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private BASE_URL: string = \"http://localhost:80/api/\";\n  private _email: string = null;\n  private _passwd: string = null;\n\n  constructor(public _http: HttpClient) { }\n\n  async login(email: string, passwd: string): Promise<boolean> {\n    this._email = email;\n    this._passwd = passwd;\n\n    /*La crida necessita els headers, en aquest cas, el 'Content-Type'.\n    També s'hi pot afegir el header 'Accept'*/\n    let options: any = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n        })\n    }\n\n    //CON EL NOMBRE DE LOS CAMPOS VERDADEROS DE LA TABLA\n    const data: any = {\n        'correo_electronico':  this._email,\n        'contrasena':  this._passwd\n    }\n\n    //Realització de la crida, embolcallada en una Promise (per poder fer l'await)\n    return new Promise(\n        (resolve, reject) => {\n            //Una crida POST ha de rebre l'URL, les dades i les opcions (capçaleres)\n            this._http.post(this.BASE_URL + \"iniciar_sesion\", data, options).subscribe(\n                (response: any) => {\n                    if(response.status == 200) {\n                        //Si tot va bé, emmagatzemem el TOKEN al LS\n                        localStorage.setItem(\"TOKEN\", response.token);\n                        resolve(true);\n                        console.log('entra login');\n                    }\n                    else {\n                      resolve(false);\n                      console.log('no inicia sesion');\n                    }\n                },\n                (error: any) => {\n                    reject(\"Error\");\n                }\n            );\n        }\n    );\n  }\n\n  /*Utilitzarem aquesta funció per reinicar la sessió quan el token hagi expirat.\n        Cal tenir en compte que, per poder-la executar, ens cal assegurar que el service tingui\n        les dades de les credencials de l'usuari*/\n  async restartSession(): Promise<boolean> {\n    if(this._email != null && this._passwd != null) {\n      const logResult = await this.login(this._email, this._passwd);\n      if(logResult) return true;\n    }\n    return false;\n  }\n  \n  //Per tancar la sessió només cal esborrar credencials i el TOKEN\n  logout(): void {\n    this._email = null;\n    this._passwd = null;\n    localStorage.removeItem(\"TOKEN\");\n    console.log('cerrado');\n  }\n  \n  get token(): string {\n    return localStorage.getItem(\"TOKEN\");\n  }\n  \n  set token(token: string) {\n    console.log(token);\n    localStorage.setItem(\"TOKEN\", token);\n  }\n  \n  /*Per ajudar-vos durant el desenvolupament i per tal que pugueu ser més àgils programant,\n        podeu comentar la comprovació de les credencials. En el codi final, aquesta comprovació \n        hi ha de ser*/\n  isUserAuthenticated(): boolean {\n\n    return localStorage.getItem(\"TOKEN\") != null;\n\n    //return this._email != null && this._passwd != null && localStorage.getItem(\"TOKEN\") != null;\n  }\n\n  rol():void{\n    let options: any = {\n      headers: new HttpHeaders()\n      .set('Accept','application/json')\n      .set('Content-Type', 'application/json',)\n      .set('Authorization', 'Bearer: '+ this.token)\n    }\n\n    new Promise(\n      (resolve, reject) => {\n          //Una crida POST ha de rebre l'URL, les dades i les opcions (capçaleres)\n          this._http.get(this.BASE_URL + \"rol\", options).subscribe(\n              (response: any) => {\n                  if(response.status == 200) {\n                      console.log(response);\n                      //Si tot va bé, emmagatzemem el TOKEN al LS\n                      //localStorage.setItem(\"TOKEN\", response.token);\n                      //resolve(true);\n                  }\n                  else {\n                    resolve(false);\n                  }\n              },\n              (error: any) => {\n                  reject(\"Error\");\n              }\n          );\n      }\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}